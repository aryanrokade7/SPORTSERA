{
    box-sizing: border-box;
}

body {
    font-family: 'Poppins', sans-serif; /* Modern font for a sleek look */
    margin: 0;
    padding: 0;
    background: linear-gradient(135deg, #FFABAB, #FFC3A0, #FF677D); /* Vibrant gradient background */
    color: #333;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

#create-channel {
    background-color: #ffffff; /* Clean white background */
    border-radius: 20px; /* More rounded corners */
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.2);
    padding: 40px;
    width: 450px; /* Fixed width for consistency */
    transition: transform 0.2s;
}

#create-channel:hover {
    transform: translateY(-5px); /* Lift effect on hover */
}

h2 {
    text-align: center;
    color: #1976d2; /* Vibrant primary color */
    margin-bottom: 25px;
    font-weight: 700; /* Bold font for the heading */
    font-size: 1.8rem; /* Larger font size */
}

.form-container {
    display: flex;
    flex-direction: column;
}

#profile-picture-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 25px;
}

#profile-picture {
    width: 120px; /* Slightly larger profile picture */
    height: 120px;
    border-radius: 50%; /* Circular profile picture */
    margin-bottom: 15px;
    border: 4px solid #1976d2; /* Border for profile picture */
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
    transition: transform 0.2s;
}

#profile-picture:hover {
    transform: scale(1.05); /* Scale effect on hover */
}

input[type="file"] {
    margin: 10px 0;
}

button {
    background-color: #1976d2; /* Primary button color */
    color: white;
    border: none;
    border-radius: 10px; /* More rounded corners */
    padding: 12px 20px;
    font-size: 1rem; /* Font size */
    cursor: pointer;
    transition: background 0.3s, transform 0.2s, box-shadow 0.2s;
    box-shadow: 0 4px 15px rgba(25, 118, 210, 0.4); /* Button shadow */
}

button:hover {
    background-color: #1565c0; /* Darker blue on hover */
    transform: translateY(-3px); /* Lift effect */
    box-shadow: 0 6px 20px rgba(25, 118, 210, 0.6); /* Increased shadow on hover */
}

button:active {
    transform: translateY(0); /* Reset lift effect on click */
    box-shadow: 0 4px 15px rgba(25, 118, 210, 0.4); /* Reset shadow on click */
}

label {
    margin-top: 10px; /* Space between label and input */
    font-weight: 500; /* Medium weight for labels */
}

input[type="text"],
textarea {
    padding: 12px;
    border: 1px solid #ddd;
    border-radius: 10px; /* Rounded corners */
    margin-bottom: 15px;
    width: 100%; /* Full width */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: border-color 0.3s, box-shadow 0.2s;
}

input[type="text"]:focus,
textarea:focus {
    border-color: #1976d2; /* Highlight border on focus */
    box-shadow: 0 2px 10px rgba(25, 118, 210, 0.4); /* Shadow on focus */
    outline: none; /* Remove default outline */
}

textarea {
    resize: none; /* Prevent resizing */
    height: 100px; /* Fixed height */
    font-family: inherit; /* Ensure consistency in font */
    font-size: 0.95rem; /* Slightly smaller font for text area */
}


 cretae chnnel js
.................................


function previewImage(event) {
    const file = event.target.files[0];
    const reader = new FileReader();

    reader.onload = function(e) {
        document.getElementById('profile-picture').src = e.target.result;
    };

    if (file) {
        reader.readAsDataURL(file);
    }
}

function capturePicture() {
    const constraints = {
        video: {
            facingMode: "user" // Use the front camera
        }
    };

    navigator.mediaDevices.getUserMedia(constraints)
        .then((stream) => {
            const video = document.createElement('video');
            video.srcObject = stream;
            video.autoplay = true; // Automatically play the video
            document.body.appendChild(video);

            const captureButton = createCaptureButton(video, stream);
            document.body.appendChild(captureButton);
        })
        .catch((error) => {
            console.error("Error accessing camera: ", error);
            alert("Unable to access the camera. Please check your permissions.");
        });
}

function createCaptureButton(video, stream) {
    const button = document.createElement('button');
    button.textContent = "Take Snapshot";
    button.style.marginTop = '10px';
    button.style.backgroundColor = '#1976d2'; // Button color
    button.style.color = 'white'; // Button text color
    button.style.border = 'none';
    button.style.borderRadius = '5px';
    button.style.padding = '10px 20px';
    button.style.cursor = 'pointer';
    button.style.transition = 'background 0.3s';

    button.onmouseover = () => {
        button.style.backgroundColor = '#1565c0'; // Darker blue on hover
    };
    button.onmouseout = () => {
        button.style.backgroundColor = '#1976d2'; // Reset to original color
    };

    button.onclick = () => {
        const canvas = document.createElement('canvas');
        canvas.width = 100; // Set desired width
        canvas.height = 100; // Set desired height
        const context = canvas.getContext('2d');
        context.drawImage(video, 0, 0, canvas.width, canvas.height);
        const imageUrl = canvas.toDataURL();
        document.getElementById('profile-picture').src = imageUrl;
        
        // Stop the video stream and clean up
        stopMediaStream(stream);
        cleanup(video, button);
    };

    return button;
}

function stopMediaStream(stream) {
    stream.getTracks().forEach(track => track.stop()); // Stop the video stream
}

function cleanup(video, button) {
    document.body.removeChild(video); // Remove the video
    document.body.removeChild(button); // Remove the button
}

function handleSubmit(event) {
    event.preventDefault();
    // Handle the form submission logic here
    alert('Channel created successfully!');
}


